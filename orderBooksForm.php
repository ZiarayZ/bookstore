<?php
try {
	require_once('functions.php');
	echo HTMLHead('orderBooksForm.php', 'Order Books', 'Order Books');
} catch (Exception $e) {
	throw new Exception("Problem " . $e->getMessage(), 0, $e);
}
echo <<<FORM

			<form id="orderForm" action="javascript:alert('form submitted');" method="get">
				<section id="orderBooks" class="listFieldset">
					<h2>Select Books</h2>

FORM;
//moved "<?php" back to add NAV etc
/* DO NOT ALTER the code in this php block.
It dynamically generates the html required to display one checkbox for each of the records currently held in the NBL_books database table. The user can select one or more records that they are interested in ordering by clicking the checkboxes.Use the browser to look at the structure of the html generated by the php code. */

try {
	// include the file with the function for the database connection
	// get database connection
	$dbConn = getConnection();
	$sqlBooks = 'SELECT bookISBN, bookTitle, bookYear, catDesc, pubName, bookPrice FROM NBL_books b INNER JOIN NBL_category c ON b.catID = c.catID INNER JOIN NBL_publisher p ON b.pubID = p.pubID ORDER BY bookTitle';

	// execute the query
	$rsBooks = $dbConn->query($sqlBooks);

	while ($book = $rsBooks->fetchObject()) {
		$bookTitle = $book->bookTitle;
		/* adding indents between \t and <label class='item'> and more indents added to other lines for better html readability */
			echo "\t				<label class='item'>
						<span class='bookTitle'>".filter_var($bookTitle, FILTER_SANITIZE_SPECIAL_CHARS)."</span>
						<span class='bookYear'>{$book->bookYear}</span>
						<span class='catDesc'>{$book->catDesc}</span>
						<span class='pubName'>{$book->pubName}</span>
						<span class='bookPrice'>{$book->bookPrice}</span>
						<input type='checkbox' name='book[]' value='{$book->bookISBN}' data-price='{$book->bookPrice}'>
						<span class='checkmark'></span>
					</label>\n";
		/* added span class checkmark for custom checkbox, to help with making it easier to display */
	}
}
catch (Exception $e) {
	throw new Exception("Problem " . $e->getMessage(), 0, $e);
}
?>
				</section>
				<section id="collection" class="fieldset">
					<h2>Collection method</h2>
					<p>Please select whether you want your chosen book(s) to be delivered to your home address (a charge applies for this) or whether you want to collect them yourself.</p>
					<p>
					Home address - &pound;5.99 <input type="radio" name="deliveryType" value="home" data-price="5.99" checked>&nbsp; | &nbsp;
					Collect from shop - no charge <input type="radio" name="deliveryType" value="shop" data-price="0">
					</p>
				</section>
				<section id="checkCost" class="fieldset">
					<h2>Total cost</h2>
					<label for="total">Total</label><input type="text" name="total" size="10" class="red" readonly>
				</section>
				<section id="placeOrder" class="fieldset">
					<h2>Place Order</h2>
					<h3>Your details</h3>
					<div id="typeCustDetails" class="custDetails">
						<label for="customerType">Customer Type:</label>
						<select name="customerType" class="red">
							<option value="">Customer Type?</option>
							<option value="ret">Customer</option>
							<option value="trd">Trade</option>
						</select>
					</div>
					<div id="retCustDetails" class="custDetails">
						<label for="forename">Forename</label><input type="text" name="forename" class="red">
						<label for="surname">Surname</label><input type="text" name="surname" class="red">
					</div>
					<div id="tradeCustDetails" class="custDetails" style="display: none">
						<label for="companyName">Company Name</label><input type="text" name="companyName" class="red">
					</div>
					<div id="subCustDetails" class="custDetails">
						<input type="submit" name="submit" value="Book now!" disabled>
						<p style="color: #FF0000; font-weight: bold;" id='termsText'>I have read and agree to the terms and conditions
						<input type="checkbox" name="termsChkbx"></p>
					</div>
				</section>
			</form>	
			<script>
			// define variables
			const inputs = document.getElementsByTagName('input');
			const selects = document.getElementsByName('customerType');
			const radioBtns = document.getElementsByName('deliveryType');
			const total = document.getElementsByName('total')[0];
			const radioBtn1 = radioBtns[0];
			const radioBtn2 = radioBtns[1];
			var books = new Array();
			var textInputs = new Array();
			const paragraph = document.getElementById('termsText');
			const corporate = document.getElementById('tradeCustDetails');
			const form = document.getElementById('orderForm');
			
			// loops through all inputs
			for (var i = 0; i < inputs.length; i++)
			{
				if (inputs[i].name == 'termsChkbx')
				{
					// terms and conditions checkbox
					var checkmark = inputs[i];
				}
				else if (inputs[i].type.toLowerCase() == 'submit')
				{
					// submit button
					var submit = inputs[i];
				}
				else if (inputs[i].name == 'book[]')
				{
					// array of book checkboxes
					books.push(inputs[i]);
				}
				else if (inputs[i].type.toLowerCase() == 'text')
				{
					// text input
					textInputs.push(inputs[i]);
				}
			}
			// loops through all selects
			for (var i = 0; i < selects.length; i++)
			{
				if (selects[i].tagName.toLowerCase() == 'select')
				{
					var custType = selects[i];
				}
			}
			
			// terms and conditions checkbox event listener
			checkmark.addEventListener("click", function() {
				if (checkmark.checked == true)
				{
					paragraph.style.color = "black";
					paragraph.style.fontWeight = "normal";
					submit.disabled = false;
				}
				else
				{
					paragraph.style.color = "red";
					paragraph.style.fontWeight = "bold";
					submit.disabled = true;
				}
			});
			
			// submit button event listener
			form.addEventListener("submit", function(event) {
				// temp variables
				let bookChecked = false;
				let textEmpty = false;
				
				// check inputs
				for (var i = 0; i < books.length; i++)
				{
					if (books[i].checked == true)
					{
						bookChecked = true;
					}
				}
				for (var i = 0; i < textInputs.length; i++)
				{
					if (textInputs[i].name == 'companyName')
					{
						if (custType.value == 'trd' && textInputs[i].value == '')
						{
							// companyName is empty and visible
							textEmpty = true;
						}
					}
					else if (textInputs[i].value == '')
					{
						// forename or surname is empty
						textEmpty = true;
					}
				}

				// output?
				if (bookChecked == false)
				{
					event.preventDefault();
					alert('Make sure to have selected a book first.');
				}
				else if (textEmpty == true)
				{
					event.preventDefault();
					alert('Make sure to have filled all input fields.');
				}
			});

			// toggle to display an input field and label
			custType.addEventListener("change", function() {
				if (custType.value == 'trd')
				{
					corporate.style.display = "block";
				}
				else
				{
					corporate.style.display = "none";
				}
			});

			var radioPrice = 5.99;
			var bookPrice = 0;
			var bookList = new Array();
			total.value = '£0';
			// listen for dynamic checkboxes
			document.body.addEventListener('click', function (event) {
				if (event.target.name == 'book[]')
				{
					// using an Array to keep track solution, faster
					if (event.target.checked)
					{
						// if already added somehow don't add again
						if (!bookList.includes(event.target.value))
						{
							bookList.push(event.target.value);
							bookPrice = parseFloat((bookPrice + parseFloat(event.target.getAttribute('data-price'))).toFixed(2));
						}
					}
					else
					{
						// find index of bookID
						let index = bookList.indexOf(event.target.value);
						// if index is found
						if (index > -1)
						{
							bookList.splice(index, 1);
							bookPrice = parseFloat((bookPrice - parseFloat(event.target.getAttribute('data-price'))).toFixed(2));
						}
					}
					/* // simple but slow solution
					bookPrice = 0;
					for (var i = 0; i < books.length; i++)
					{
						if (books[i].checked == true)
						{
							bookPrice = parseFloat((bookPrice + parseFloat(books[i].getAttribute('data-price'))).toFixed(2));
						}
					}*/

					// update Total box
					if (bookPrice > 0)
					{
						total.value = '£'+(radioPrice + bookPrice).toFixed(2);
					}
					else
					{
						total.value = '£0';
					}
				};
			});

			// listen to each radio button
			radioBtn1.addEventListener('click', function() {
				radioPrice = parseFloat(radioBtn1.getAttribute('data-price'));

				// update Total box
				if (bookPrice > 0)
				{
					total.value = '£'+(radioPrice + bookPrice).toFixed(2);
				}
				else
				{
					total.value = '£0';
				}
			});
			radioBtn2.addEventListener('click', function() {
				radioPrice = parseFloat(radioBtn2.getAttribute('data-price'));

				// update Total box
				if (bookPrice > 0)
				{
					total.value = '£'+(radioPrice + bookPrice).toFixed(2);
				}
				else
				{
					total.value = '£0';
				}
			});
			</script>
		</main>
	</body>
</html>